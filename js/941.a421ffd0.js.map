{"version":3,"file":"js/941.a421ffd0.js","mappings":"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","sources":["webpack://mweb/./src/views/Canvas.vue","webpack://mweb/src/views/Canvas.vue","webpack://mweb/./src/views/Canvas.vue?5810","webpack://mweb/./src/views/Canvas.vue?12b2"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"box\"},[_c('canvas',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.alpha),expression:\"alpha\"}],ref:\"canvas\"})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"box\">\r\n    <canvas v-show=\"alpha\" ref=\"canvas\"></canvas>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ParticleComponent',\r\n  data() {\r\n    return {\r\n      PARTICLE_NUM: 500, // 粒子数量\r\n      PARTICLE_BASE_RADIUS: 0.5, // 半径\r\n      FL: 500,\r\n      DEFAULT_SPEED: 50, // 粒子运动速度慢\r\n      BOOST_SPEED: 200,  // 粒子运动速度快\r\n      canvas: null,\r\n      canvasWidth: 0,\r\n      canvasHeight: 0,\r\n      context: null,\r\n      centerX: 0,\r\n      centerY: 0,\r\n      // mouseX: 0,\r\n      // mouseY: 0,\r\n      alpha: 0.1, // 透明度\r\n      speed: 2,\r\n      targetSpeed: 2,\r\n      particles: [],\r\n      intervalId: null\r\n    };\r\n  },\r\n  mounted() {\r\n    this.canvas = this.$refs.canvas;\r\n    this.resize();\r\n    // 处理窗口缩放时要处理的逻辑操作\r\n    window.addEventListener('resize', this.resize);\r\n    // 生成粒子\r\n    for (let i = 0; i < this.PARTICLE_NUM; i++) {\r\n      let particle = new Particle();\r\n      this.particles.push(this.randomizeParticle(particle));\r\n      this.particles[i].z -= 500 * Math.random(); //  Math.random() 返回一个包括0但小于1的随机数\r\n    }\r\n    // 循环执行 setInterval，另一个是定时执行 setTimeout\r\n    this.intervalId = setInterval(this.loop, 1000 / 60);\r\n    // console.log(123456)\r\n    setTimeout(() => {\r\n      this.accelerateParticles();\r\n    }, 1);\r\n    setTimeout(() => {\r\n      this.fadeOutParticles();\r\n    }, 2000);\r\n    setTimeout(() => {\r\n      this.clearParticles()\r\n    }, 2500);\r\n    setTimeout(() => {\r\n      clearInterval(this.intervalId);\r\n    }, 3500);\r\n  },\r\n  // 实例销毁之前调用 \r\n  beforeDestroy() {\r\n    window.removeEventListener('resize', this.resize);\r\n\r\n    clearInterval(this.intervalId);\r\n  },\r\n  methods: {\r\n    resize() {\r\n      this.canvasWidth = this.canvas.width = window.innerWidth;\r\n      this.canvasHeight = this.canvas.height = window.innerHeight;\r\n      this.centerX = this.canvasWidth * 0.5;\r\n      this.centerY = this.canvasHeight * 0.5;\r\n      this.context = this.canvas.getContext('2d');\r\n      this.context.fillStyle = 'rgb(255, 255, 255)';\r\n    },\r\n    // 执行每一帧的绘制逻辑，包括粒子的移动、重新生成和绘制\r\n    loop() {\r\n      // 将当前的绘图状态（包括所有的绘图属性如填充样式、笔触样式、阴影、变换矩阵等）保存到一个栈中\r\n      console.log(this.alpha)\r\n      \r\n      if(this.alpha <= 0.1){\r\n        this.alpha = 0\r\n        // console.log(this.alpha)\r\n      }\r\n      this.context.globalAlpha = this.alpha;\r\n      this.context.save();\r\n      this.context.fillStyle = 'rgb(0, 0, 0)';\r\n      this.context.fillRect(0, 0, this.canvasWidth, this.canvasHeight);\r\n      // 从栈中弹出最近保存的绘图状态，并将其应用到当前的绘图上下文\r\n      this.context.restore();\r\n      // console.log(this.context.globalAlpha)\r\n      this.speed += (this.targetSpeed - this.speed) * 0.01;\r\n      // this.speed = this.targetSpeed\r\n      const halfPi = Math.PI * 0.5;\r\n      const atan2 = Math.atan2;\r\n      const cos = Math.cos;\r\n      const sin = Math.sin;\r\n\r\n      this.context.beginPath(); // 设置弧形\r\n      for (let i = 0; i < this.PARTICLE_NUM; i++) {\r\n        let p = this.particles[i];\r\n\r\n        p.pastZ = p.z;\r\n        p.z -= this.speed;\r\n\r\n        if (p.z <= 0) {\r\n          this.randomizeParticle(p);\r\n          continue;\r\n        }\r\n\r\n        let cx = this.centerX  * 1.25;\r\n        let cy = this.centerY  * 1.25;\r\n\r\n        let rx = p.x - cx;\r\n        let ry = p.y - cy;\r\n\r\n        let f = this.FL / p.z;\r\n        let x = cx + rx * f;\r\n        let y = cy + ry * f;\r\n        let r = this.PARTICLE_BASE_RADIUS * f;\r\n\r\n        let pf = this.FL / p.pastZ;\r\n        let px = cx + rx * pf;\r\n        let py = cy + ry * pf;\r\n        let pr = this.PARTICLE_BASE_RADIUS * pf;\r\n\r\n        let a = atan2(py - y, px - x);\r\n        let a1 = a + halfPi;\r\n        let a2 = a - halfPi;\r\n\r\n        // 移动到路径的起始点\r\n        this.context.moveTo(px + pr * cos(a1), py + pr * sin(a1));\r\n        // 从上一个位置绘制一个弧线到当前粒子位置\r\n        this.context.arc(px, py, pr, a1, a2, true);\r\n        // 从当前位置为起点，画一条直线到新的位置外围\r\n        this.context.lineTo(x + r * cos(a2), y + r * sin(a2));\r\n        // 绘制从新位置的外围回到起始角度的弧线\r\n        this.context.arc(x, y, r, a2, a1, true);\r\n        // 关闭路径，将起点和终点通过直线连接起来\r\n        this.context.closePath();\r\n      }\r\n      this.context.fill();\r\n    },\r\n    // 随机化粒子的初始位置和深度\r\n    randomizeParticle(p) {\r\n      p.x = Math.random() * this.canvasWidth;\r\n      p.y = Math.random() * this.canvasHeight;\r\n      p.z = Math.random() * 1500 + 500;\r\n      return p;\r\n    },\r\n    accelerateParticles() {\r\n      this.targetSpeed = this.DEFAULT_SPEED;\r\n      const step = () => {\r\n        if( this.alpha <= 1){\r\n          this.alpha += 0.03;\r\n          this.alpha = this.alpha >= 1 ? 1 :this.alpha\r\n          requestAnimationFrame(step);\r\n        }\r\n      }\r\n      step();\r\n    },\r\n    fadeOutParticles() {\r\n      this.targetSpeed = this.BOOST_SPEED;\r\n    },\r\n    clearParticles(){\r\n      this.targetSpeed = this.DEFAULT_SPEED;\r\n      const step = () => {\r\n        if(this.alpha >= 0){\r\n          this.alpha -= 0.1\r\n          this.alpha = this.alpha <= 0 ? 0 :this.alpha\r\n          requestAnimationFrame(step);\r\n        }\r\n      }\r\n      step();\r\n    },\r\n  }\r\n};\r\n// 创建粒子对象，每个粒子都有 x、y 和 z 坐标以及一个 pastZ 属性，表示粒子上一次的位置\r\nfunction Particle(x, y, z) {\r\n  this.x = x || 0;\r\n  this.y = y || 0;\r\n  this.z = z || 0;\r\n  this.pastZ = 0;\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.box {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: black;  \r\n}\r\ncanvas {\r\n  display: block;\r\n}\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Canvas.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Canvas.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Canvas.vue?vue&type=template&id=78fda150&scoped=true\"\nimport script from \"./Canvas.vue?vue&type=script&lang=js\"\nexport * from \"./Canvas.vue?vue&type=script&lang=js\"\nimport style0 from \"./Canvas.vue?vue&type=style&index=0&id=78fda150&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"78fda150\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","directives","name","rawName","value","alpha","expression","ref","staticRenderFns","data","PARTICLE_NUM","PARTICLE_BASE_RADIUS","FL","DEFAULT_SPEED","BOOST_SPEED","canvas","canvasWidth","canvasHeight","context","centerX","centerY","speed","targetSpeed","particles","intervalId","mounted","$refs","resize","window","addEventListener","i","particle","Particle","push","randomizeParticle","z","Math","random","setInterval","loop","setTimeout","accelerateParticles","fadeOutParticles","clearParticles","clearInterval","beforeDestroy","removeEventListener","methods","width","innerWidth","height","innerHeight","getContext","fillStyle","console","log","globalAlpha","save","fillRect","restore","halfPi","PI","atan2","cos","sin","beginPath","p","pastZ","cx","cy","rx","x","ry","y","f","r","pf","px","py","pr","a","a1","a2","moveTo","arc","lineTo","closePath","fill","step","requestAnimationFrame","component"],"sourceRoot":""}